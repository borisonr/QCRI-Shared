{
  "_args": [
    [
      {
        "raw": "babel-plugin-angular2-annotations@^3.0.4",
        "scope": null,
        "escapedName": "babel-plugin-angular2-annotations",
        "name": "babel-plugin-angular2-annotations",
        "rawSpec": "^3.0.4",
        "spec": ">=3.0.4 <4.0.0",
        "type": "range"
      },
      "/Users/rborison/code/qcri-common"
    ]
  ],
  "_from": "babel-plugin-angular2-annotations@>=3.0.4 <4.0.0",
  "_id": "babel-plugin-angular2-annotations@3.1.0",
  "_inCache": true,
  "_location": "/babel-plugin-angular2-annotations",
  "_nodeVersion": "5.0.0",
  "_npmUser": {
    "name": "shuhei",
    "email": "shuhei.kagawa@gmail.com"
  },
  "_npmVersion": "3.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "babel-plugin-angular2-annotations@^3.0.4",
    "scope": null,
    "escapedName": "babel-plugin-angular2-annotations",
    "name": "babel-plugin-angular2-annotations",
    "rawSpec": "^3.0.4",
    "spec": ">=3.0.4 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/babel-plugin-angular2-annotations/-/babel-plugin-angular2-annotations-3.1.0.tgz",
  "_shasum": "e577a7971eb7fe66dd8e922bb70b41dd226d97b1",
  "_shrinkwrap": null,
  "_spec": "babel-plugin-angular2-annotations@^3.0.4",
  "_where": "/Users/rborison/code/qcri-common",
  "author": {
    "name": "Shuhei Kagawa",
    "email": "shuhei.kagawa@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/shuhei/babel-plugin-angular2-annotations/issues"
  },
  "dependencies": {
    "babel-rtts-helper": "^0.2.0"
  },
  "description": "An experimental babel transformer plugin for Angular 2 annotations",
  "devDependencies": {
    "angular2": "^2.0.0-beta.0",
    "babel-cli": "^6.3.17",
    "babel-core": "^6.3.17",
    "babel-eslint": "^5.0.0-beta6",
    "babel-plugin-external-helpers-2": "^6.3.13",
    "babel-plugin-transform-class-properties": "^6.3.13",
    "babel-plugin-transform-decorators-legacy": "^1.3.3",
    "babel-plugin-transform-flow-strip-types": "^6.3.15",
    "babel-polyfill": "^6.3.14",
    "babel-preset-es2015": "^6.3.13",
    "babelify": "^7.2.0",
    "babylon": "^6.3.20",
    "es6-promise": "^3.0.2",
    "es6-shim": "^0.33.13",
    "eslint": "^1.10.3",
    "jasmine-core": "^2.4.1",
    "karma": "^0.13.15",
    "karma-browserify": "^4.4.2",
    "karma-jasmine": "^0.3.6",
    "karma-phantomjs-launcher": "^0.2.1",
    "karma-source-map-support": "^1.1.0",
    "phantomjs": "^1.9.19",
    "reflect-metadata": "^0.1.2",
    "rxjs": "^5.0.0-beta.0",
    "tape": "^4.2.2",
    "zone.js": "^0.5.10"
  },
  "directories": {},
  "dist": {
    "shasum": "e577a7971eb7fe66dd8e922bb70b41dd226d97b1",
    "tarball": "https://registry.npmjs.org/babel-plugin-angular2-annotations/-/babel-plugin-angular2-annotations-3.1.0.tgz"
  },
  "gitHead": "ca1f446b239d672656e042bc4050c1dd41a8b306",
  "homepage": "https://github.com/shuhei/babel-plugin-angular2-annotations#readme",
  "keywords": [
    "es6",
    "es2015",
    "babel",
    "babel-plugin",
    "angular",
    "angular2",
    "ng2",
    "annotation",
    "decorator"
  ],
  "license": "ISC",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "shuhei",
      "email": "shuhei.kagawa@gmail.com"
    }
  ],
  "name": "babel-plugin-angular2-annotations",
  "optionalDependencies": {},
  "peerDependencies": {
    "babel-plugin-transform-decorators-legacy": "^1.3.3"
  },
  "readme": "[![build status](https://img.shields.io/travis/shuhei/babel-plugin-angular2-annotations/master.svg)](https://travis-ci.org/shuhei/babel-plugin-angular2-annotations)\n[![npm version](https://img.shields.io/npm/v/babel-plugin-angular2-annotations.svg)](https://www.npmjs.org/package/babel-plugin-angular2-annotations)\n[![npm downloads](https://img.shields.io/npm/dm/babel-plugin-angular2-annotations.svg)](https://www.npmjs.org/package/babel-plugin-angular2-annotations)\n\n# babel-plugin-angular2-annotations\n\nA babel transformer plugin for Angular 2 annotations.\n\nUse `babel-plugin-transform-decorators-legacy` to support Babel 5 decorators.\n\nMake sure to load [reflect-metadata](https://github.com/rbuckton/ReflectDecorators) for browser in order to polyfill Metadata Reflection API in your app.\n\n## Install\n\n```sh\nnpm install --save-dev babel-plugin-angular2-annotations\n```\n\n```sh\nnpm install --save-dev babel-plugin-transform-decorators-legacy babel-plugin-transform-class-properties babel-plugin-transform-flow-strip-types babel-preset-es2015\n```\n\n.babelrc\n\n```json\n{\n  \"plugins\": [\n    \"angular2-annotations\",\n    \"transform-decorators-legacy\",\n    \"transform-class-properties\",\n    \"transform-flow-strip-types\"\n  ],\n  \"presets\": [\n    \"es2015\"\n  ]\n}\n```\n\n### npm 3\n\nThat's it.\n\n### npm 2\n\nTo monkey-patch `babylon`, the parser of `babel`, should be installed **at the top level**. This is an ugly hack but inevitable to support parameter decorators, which is not currently supported by `babel`, by monkey-patching.\n\n```\nnpm install --save-dev babylon\n```\n\n## Supported annotations\n\n- Class decorators (`@Component()`): works without this plugin\n- Type annotations for constructor parameters (`constructor(foo: Foo, bar: Bar) {}`)\n- Decorators for constructor parameters (`constructor(@Attriute('name') name, @Parent() parent) {}`)\n\n## Example\n\nBefore:\n\n```js\nclass HelloComponent {\n  constructor(@Something({ hello: 'world' }) foo: Foo, bar: Bar) {\n  }\n}\n```\n\nAfter:\n\n```js\nclass HelloComponent {\n}\n\nSomething({ hello: 'world' })(HelloComponent, null, 0);\nReflect.defineMetadata('design:paramtypes', [Foo, Bar]);\n```\n\nSee [babel-angular2-app](https://github.com/shuhei/babel-angular2-app) for more complete example.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/shuhei/babel-plugin-angular2-annotations.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib --copy-files",
    "clean": "rm -rf lib",
    "lint": "eslint .",
    "prepublish": "npm run clean && npm run build",
    "test": "npm run test:unit && npm run test:integration",
    "test:integration": "npm run build && karma start --single-run",
    "test:unit": "node test/unit"
  },
  "version": "3.1.0"
}
